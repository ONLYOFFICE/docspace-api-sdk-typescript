/* tslint:disable */
/* eslint-disable */
/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * The password settings parameters.
 * @export
 * @interface PasswordSettingsDto
 */
export interface PasswordSettingsDto {
    /**
     * The minimum number of characters required for valid passwords.
     * @type {number}
     * @memberof PasswordSettingsDto
     */
    'minLength'?: number;
    /**
     * Specifies whether the password should contain the uppercase letters or not.
     * @type {boolean}
     * @memberof PasswordSettingsDto
     */
    'upperCase'?: boolean;
    /**
     * Specifies whether the password should contain the digits or not.
     * @type {boolean}
     * @memberof PasswordSettingsDto
     */
    'digits'?: boolean;
    /**
     * Specifies whether the password should contain the special symbols or not.
     * @type {boolean}
     * @memberof PasswordSettingsDto
     */
    'specSymbols'?: boolean;
    /**
     * The allowed password characters in the regex string format.
     * @type {string}
     * @memberof PasswordSettingsDto
     */
    'allowedCharactersRegexStr'?: string | null;
    /**
     * The password digits in the regex string format.
     * @type {string}
     * @memberof PasswordSettingsDto
     */
    'digitsRegexStr'?: string | null;
    /**
     * The password uppercase letters in the regex string format.
     * @type {string}
     * @memberof PasswordSettingsDto
     */
    'upperCaseRegexStr'?: string | null;
    /**
     * The passaword special symbols in the regex string format.
     * @type {string}
     * @memberof PasswordSettingsDto
     */
    'specSymbolsRegexStr'?: string | null;
}

